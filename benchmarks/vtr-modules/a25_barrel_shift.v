/* Generated by Yosys 0.16+31 (git sha1 81edda473, clang 13.0.1 -fPIC -Os) */

(* cells_not_processed =  1  *)
(* src = "../vtr/verilog/arm_core.v:3755.1-3830.10" *)
module a25_barrel_shift(i_clk, i_in, i_carry_in, i_shift_amount, i_shift_imm_zero, i_function, o_out, o_carry_out, o_stall);
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  wire _00_;
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  wire [31:0] _01_;
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  wire _02_;
  (* src = "../vtr/verilog/arm_core.v:3788.13-3788.36" *)
  wire _03_;
  (* src = "../vtr/verilog/arm_core.v:3787.13-3787.37" *)
  wire [31:0] _04_;
  (* src = "../vtr/verilog/arm_core.v:3789.13-3789.36" *)
  wire _05_;
  (* src = "../vtr/verilog/arm_core.v:3792.23-3792.59" *)
  wire _06_;
  (* src = "../vtr/verilog/arm_core.v:3803.25-3803.33" *)
  wire _07_;
  (* src = "../vtr/verilog/arm_core.v:3792.24-3792.44" *)
  wire _08_;
  (* src = "../vtr/verilog/arm_core.v:3793.23-3793.59" *)
  wire [31:0] _09_;
  (* src = "../vtr/verilog/arm_core.v:3794.23-3794.71" *)
  wire _10_;
  (* src = "../vtr/verilog/arm_core.v:3786.13-3786.27" *)
  wire full_carry_out;
  (* src = "../vtr/verilog/arm_core.v:3788.13-3788.29" *)
  reg full_carry_out_r = 1'h0;
  (* src = "../vtr/verilog/arm_core.v:3785.13-3785.21" *)
  wire [31:0] full_out;
  (* src = "../vtr/verilog/arm_core.v:3787.13-3787.23" *)
  reg [31:0] full_out_r = 32'd0;
  (* src = "../vtr/verilog/arm_core.v:3773.29-3773.39" *)
  input i_carry_in;
  wire i_carry_in;
  (* src = "../vtr/verilog/arm_core.v:3771.29-3771.34" *)
  input i_clk;
  wire i_clk;
  (* src = "../vtr/verilog/arm_core.v:3776.29-3776.39" *)
  input [1:0] i_function;
  wire [1:0] i_function;
  (* src = "../vtr/verilog/arm_core.v:3772.29-3772.33" *)
  input [31:0] i_in;
  wire [31:0] i_in;
  (* src = "../vtr/verilog/arm_core.v:3774.29-3774.43" *)
  input [7:0] i_shift_amount;
  wire [7:0] i_shift_amount;
  (* src = "../vtr/verilog/arm_core.v:3775.29-3775.45" *)
  input i_shift_imm_zero;
  wire i_shift_imm_zero;
  (* src = "../vtr/verilog/arm_core.v:3779.29-3779.40" *)
  output o_carry_out;
  wire o_carry_out;
  (* src = "../vtr/verilog/arm_core.v:3778.29-3778.34" *)
  output [31:0] o_out;
  wire [31:0] o_out;
  (* src = "../vtr/verilog/arm_core.v:3780.29-3780.36" *)
  output o_stall;
  wire o_stall;
  (* src = "../vtr/verilog/arm_core.v:3784.13-3784.28" *)
  wire quick_carry_out;
  (* src = "../vtr/verilog/arm_core.v:3783.13-3783.22" *)
  wire [31:0] quick_out;
  (* src = "../vtr/verilog/arm_core.v:3789.13-3789.24" *)
  reg use_quick_r = 1'h1;
  assign _06_ = _08_ & (* src = "../vtr/verilog/arm_core.v:3792.23-3792.59" *) use_quick_r;
  assign _07_ = ! (* src = "../vtr/verilog/arm_core.v:3803.25-3803.33" *) o_stall;
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  always @(posedge i_clk)
    full_out_r <= full_out;
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  always @(posedge i_clk)
    full_carry_out_r <= full_carry_out;
  (* src = "../vtr/verilog/arm_core.v:3799.1-3804.8" *)
  always @(posedge i_clk)
    use_quick_r <= _07_;
  assign _08_ = | (* src = "../vtr/verilog/arm_core.v:3792.24-3792.44" *) i_shift_amount[7:2];
  assign _09_ = use_quick_r ? (* src = "../vtr/verilog/arm_core.v:3793.23-3793.59" *) quick_out : full_out_r;
  assign _10_ = use_quick_r ? (* src = "../vtr/verilog/arm_core.v:3794.23-3794.71" *) quick_carry_out : full_carry_out_r;
  (* module_not_derived = 32'd1 *)
  (* src = "../vtr/verilog/arm_core.v:3807.18-3815.2" *)
  a25_shifter_full u_shifter_full (
    .i_carry_in(i_carry_in),
    .i_function(i_function),
    .i_in(i_in),
    .i_shift_amount(i_shift_amount),
    .i_shift_imm_zero(i_shift_imm_zero),
    .o_carry_out(full_carry_out),
    .o_out(full_out)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../vtr/verilog/arm_core.v:3820.19-3828.2" *)
  a25_shifter_quick u_shifter_quick (
    .i_carry_in(i_carry_in),
    .i_function(i_function),
    .i_in(i_in),
    .i_shift_amount(i_shift_amount),
    .i_shift_imm_zero(i_shift_imm_zero),
    .o_carry_out(quick_carry_out),
    .o_out(quick_out)
  );
  assign o_stall = _06_;
  assign o_out = _09_;
  assign o_carry_out = _10_;
  assign _04_ = 32'd0;
  assign _03_ = 1'h0;
  assign _05_ = 1'h1;
  assign _02_ = _07_;
  assign _00_ = full_carry_out;
  assign _01_ = full_out;
endmodule
